//filtrar eventos por categoría
//uso querySelectorAll para capturar todos los elementos con la clase .form-check-input
//El método forEach se utiliza para ejecutar una función proporcionada, una vez por cada elemento en una lista o arreglo
//eventoFiltrado: filtro la lista de eventos según la categoría seleccionada
//mostrarEventoFiltrado(): Llamo a la función para mostrar los eventos filtrados

// const checkboxes = document.querySelectorAll('.form-check-input');
// console.log(checkboxes);

// checkboxes.forEach(checkbox => {
//   checkbox.addEventListener('input', () => {
//     const categoriaSeleccionada = checkbox.value;

//     const eventoFiltrado = data.events.filter(event => event.category === categoriaSeleccionada);

//     console.log(mostrarEventoFiltrado);
//     mostrarEventoFiltrado(eventoFiltrado, contenedorEventos);

//   });
// });


 //comparo el valor almacenado en categoriasCheckeadas con el de del valor de data.event.category y si coincide imprimo la tarjeta
  // if (categoriasCheckeadas == data.events.category){
  //   console.log(events.category);
  // }
  //const inputCheckeado = checkboxes.filter(checkbox => inputSeleccionado === checkbox.checked);

  // checkboxes.forEach(checkbox => {
  //   if(checkbox.value === events.category){
  //     createCard(events);
  //   }
  // })

  //1-nombre del checkbox:
  //2tomar las categorias checheadas y por cada categoria filtrar la data de la base de datos (event)
  //3- comparar el evento con mi dato y guardarlo en la variable
  //4- pushear la data encontrada dentro de la variable


  //console.log(inputCheckeado);


  //convierto toda la coleccion de checkboxes en un array y lo mapeo para obtener un array de categorias y almacenarlo en categoriaSeleccionada
// let categoriaSeleccionada = Array.from(checkboxes)
// .map(checkbox =>
//   checkbox.dataset.category);
// console.log(checkbox)
// console.log(categoriaSeleccionada);

// const filtrarEventoPorCategoria = data.events.filter(event => categoriaSeleccionada.includes(event.category)); //filtro todos los eventos desde el array "data"


//comparo valores
// if(checkboxes.length === 0){
//   // mostrarAllEvents(arrayData, ubicacion);
//   mostrarEventoFiltrado(filtrarEventoPorCategoria, contenedorEventos);
// }else {
//   let categoriaSeleccionada = data.events.filter(event => categoriaSeleccionada.includes(event.category));
// };
// mostrarEventoFiltrado(categoriaSeleccionada, contenedorEventos)


// function updateFilteredEvents(events, ubicacion) {
//   const checkboxes = document.querySelectorAll('input[name="category"]');
//   const selectedCategories = Array.from(checkboxes)
//     .filter((checkbox) => checkbox.checked)
//     .map((checkbox) => checkbox.value);
//   if (selectedCategories.length === 0) {
//     mostrarEventoFiltrado(events, idContenedor);
//   } else {
//     const arrayFiltrado = events.filter((e) =>
//       selectedCategories.includes(e.category)
//     );
//     mostrarEventoFiltrado(arrayFiltrado, ubicacion);
//   }
// }


// function filtrarEventoPorCategoria(events, categories) {
//   if (categories.length > 0) {
//     return events;
//   }
//   return events.filter(event => categories.includes(event.category));
// }


// checkboxes.forEach(input => {
//   input.addEventListener('change', () => {
//     let arrayCheckeados = Array.from(checkboxes);
//     arrayCheckeados = arrayCheckeados.filter(check => check.checked).map(input => input.value == "true");
//     if (arrayCheckeados.length > 0) {
//       let filtrarEventoPorCategoria = events.filter(event => arrayCheckeados.includes(events.category));
//       mostrarEventoFiltrado(filtrarEventoPorCategoria, contenedorFiltro)
//     }
//   })
// })




//la funcion createCard() necesita como paramentro un objeto y retorna una estructura HTML la cual contiene algunas caracteristicas del objeto, tales como "objeto.image", "objeto.name", "objeto.description", "objeto.price"

// function createCard(objeto){
//     return `<div class="card col-11 col-sm-4 col-md-3 col-xl-2">
//                 <img src="${objeto.image}" class="card-img-top" alt="${objeto.name}">
//                 <div class="card-body">
//                     <h5 class="card-title">${objeto.name}</h5>
//                     <p class="card-text">${objeto.description}</p>
//                 </div>
//                 <div class="card-footer">
//                     <a href="#">$${objeto.price} USD</a>
//                     <a href="./details.html" class="btn btn-primary">Ver detalles</a>
//                 </div>
//             </div>`
// }




//******este codigo fue rediseñado y adaptado en las funciones createCard() y mostrarAllEvents() */

// let contenedorEventos = document.getElementById('contenedorEventos');

// for(let event of data.events){
//     let card = `<div class="card col-11 col-sm-4 col-md-3 col-xl-2">
//     <img src="${event.image}" class="card-img-top" alt="${event.name}">
//     <div class="card-body">
//         <h5 class="card-title">${event.name}</h5>
//         <p class="card-text">${event.description}</p>
//     </div>
//     <div class="card-footer">
//         <a href="#">$${event.price} USD</a>
//         <a href="./details.html" class="btn btn-primary">Go somewhere</a>
//     </div>
// </div>`;
// contenedorEventos.innerHTML += card;
// }



// function createCard(objeto) {
//     return `<div class="card col-11 col-sm-4 col-md-3 col-xl-2">
//                 <img src="${objeto.image}" class="card-img-top" alt="${objeto.name}">
//                 <div class="card-body">
//                     <h5 class="card-title">${objeto.name}</h5>
//                     <p class="card-text">${objeto.description}</p>
//                 </div>
//                 <div class="card-footer">
//                     <a href="#">$${objeto.price} USD</a>
//                     <a href="./details.html" class="btn btn-primary">Ver detalles</a>
//                 </div>
//             </div>`;
// }



//<p class="card-text">${objeto.date}</p>


// function createCard(objeto) {
//     return `<div class="card col-11 col-sm-4 col-md-3 col-xl-2">
//                 <img src="${objeto.image}" class="card-img-top" alt="${objeto.name}">
//                 <div class="card-body">
//                     <h5 class="card-title">${objeto.name}</h5>
//                     <p class="card-text">${objeto.description}</p>
//                 </div>
//                 <div class="card-footer">
//                     <a href="#">$${objeto.price} USD</a>
//                     <a href="./details.html" class="btn btn-primary">Ver detalles</a>
//                 </div>
//             </div>`;
// }


//==================funcion para mostrar eventos filtrados========================
//tiene la estructura igual a mostrarAllEvents()

// function mostrarEventoFiltrado(arrayFiltrado, ubicacion) {
//   let tarjetas = "";
//   for (objeto of arrayFiltrado) {
//     tarjetas += createCard(objeto);
//   }
//   ubicacion.innerHTML = tarjetas;
// }


====================================MAIN.JS====================================================
{
//================= COMBINACION DE FILTRO Y BUSCADOR ========================

//if (e.target.classList.contains('form-check-input'));

// function filtrarYMostrar(array) {
//   let busqueda = buscador.value;
//   let dataFiltrada = data.events.filter(evento => evento.name.toLowerCase().includes(busqueda.toLowerCase()));
//   console.log(dataFiltrada.name);

//   categoriasCheckeadas = [];

//   const checkboxes = document.querySelectorAll('.form-check-input:checked');
//   console.log(checkboxes);

//   checkboxes.forEach(checkbox => {
//     if (checkbox.checked && !categoriasCheckeadas.includes(checkbox.value)) {
//       categoriasCheckeadas.push(checkbox.value)
//     }
//   });

//   createCard(categoriasCheckeadas);

//   if (categoriasCheckeadas.length > 0) {
//     console.log(categoriasCheckeadas);
//     dataFiltrada = dataFiltrada.filter(evento => categoriasCheckeadas.includes(evento.category));
//   }
//   mostrarEventoFiltrado(dataFiltrada, contenedorEventos);
// }
}



====================================PAST EVENTS====================================================

//a diferencia de la funcion en home, en mostrarPastEvents() necesito obtener y guardar en una variable la fecha actual del array (let currentDate) para poder compararla en el bucle for que recorre todos los eventos
//al inicio del bucle creamos un objeto Date a partir de la fecha del evento (objeto.date) y lo almacenamos en una variable (let eventDate)
//realizamos la comparacion de las variables guardadas (eventDate y currentDate) de esta manera nos aseguramos que solo se creen las tarjetas de aquellos eventos cuya fecha sea anterior a la fecha actual (eventDate < currentDate)

function mostrarPastEvents(arrayData, ubicacion){
    let tarjetas = "";
    let currentDate = new Date(data.currentDate);
    // console.log("=========" + currentDate + "===========");

    for (objeto of arrayData) {
        let eventDate = new Date(objeto.date);
        if (eventDate < currentDate) {
            // console.log(eventDate);
            tarjetas += createCard(objeto);
        }
    }
    ubicacion.innerHTML = tarjetas;
}


//========================= BUSCADOR ===============================

// buscador.addEventListener('input', () => {
//     let busqueda = buscador.value;
//     let dataFiltrada = data.events.filter(evento => evento.name.toLowerCase().includes(busqueda.toLowerCase()));
//     console.log(dataFiltrada.name);
//     mostrarPastEvents(dataFiltrada, contenedorEventos);
// })



==============================UPCOMING EVENTS====================================================
//========================= BUSCADOR ===============================

buscador.addEventListener('input', () => {
    let busqueda = buscador.value;
    let dataFiltrada = data.events.filter(evento => evento.name.toLowerCase().includes(busqueda.toLowerCase()));
    console.log(dataFiltrada.name);
    mostrarUpcomingEvents(dataFiltrada, contenedorEventos);
})


====================================DETAILS====================================================
//================= Function ========================
function detailCard() {
    // console.log(objeto);
    document.getElementById("containerCard").innerHTML =
    // `<div class="card col-11 col-sm-4 col-md-3 col-xl-2">
    //             <div class="card-img">
    //                 <img src="${eventito.image}" class="card-img-top" alt="...">
    //             </div>
    //             <div class="card-body">
    //                 <h2>${eventito.name}</h2>
    //                 <p>${eventito.category}</p>
    //                 <p>${eventito.description}</p>
    //             </div>
    //             <div class="card-footer">
    //                 <p>$${eventito.price} USD</p>
    //                 <p>${eventito.date}</p>
    //             </div>
    //         </div>`
//}









UPCOMING EVENTS

function mostrarUpcomingEvents(arrayData, ubicacion) {
    let tarjetas = "";
    let error = document.getElementById("error");
    let currentDate = new Date(data.currentDate);
    // console.log("=========" + data.currentDate + "===========");

    if (arrayData.length > 0) {
        for (objeto of arrayData) {
            let eventDate = new Date(objeto.date);
            if (eventDate > currentDate) {
                // console.log(eventDate);
                tarjetas += createCard(objeto);
            }
            ubicacion.innerHTML = tarjetas;
            error.innerHTML = "";
        }
    } else {
        console.log("Error: No se encontraron resultados");
        error.innerHTML = `<p><i><b>No se encontraron resultados...</b></i></p>`;
    }
}


{

// Función para filtrar eventos futuros
// function filtrarEventosFuturos(eventos, currentDate) {
//     const fechaActual = new Date(currentDate);
//     eventosFuturos = eventos.filter(evento => {
//         const eventDate = new Date(evento.date);
//         return eventDate > fechaActual;
//     });
// }

// Función para mostrar todos los eventos en la página
// function mostrarTodosLosEventos() {
//     const contenedorTarjetas = document.getElementById("contenedorEventos");
//     const tarjetasHTML = eventosFuturos.map(evento => createCard(evento)).join("");
//     contenedorTarjetas.innerHTML = tarjetasHTML;
// }

}




prueba para upcoming_events*****************************

// upcoming_events.js

// Declarar la variable para almacenar los eventos futuros
let eventosFuturos = [];

let data = [];

function mostrarUpcomingEvents(data, ubicacion) {
    let tarjetas = "";
    let error = document.getElementById("error");

    if (data && data.events && data.events.length > 0) {
        let currentDate = new Date(data.currentDate);
        for (objeto of data.events) {
            let eventDate = new Date(objeto.date);
            if (eventDate > currentDate) {
                tarjetas += createCard(objeto);
            }
        }
        ubicacion.innerHTML = tarjetas;
        error.innerHTML = "";
    } else {
        console.log("Error: No se encontraron resultados");
        error.innerHTML = `<p><i><b>No se encontraron resultados...</b></i></p>`;
    }
}

// Función para mostrar todos los checkboxes en la página
function mostrarTodosLosCheckboxes(eventos) {
    const contenedorFiltro = document.getElementById("contenedorFiltro");
    const categoriasUnicas = obtenerCategoriasUnicas(eventos);

    let checkboxesHTML = "";

    categoriasUnicas.forEach(categoria => {
        checkboxesHTML += `
            <div class="form-check">
                <input class="form-check-input" type="checkbox" value="${categoria}" id="${categoria}">
                <label class="form-check-label" for="${categoria}">
                    ${categoria}
                </label>
            </div>
        `;
    });

    console.log("Checkboxes generados:", checkboxesHTML);

    contenedorFiltro.innerHTML = checkboxesHTML;
}

// Función para manejar el cambio en los checkboxes de filtro
function manejarFiltroCheckboxes() {
    console.log("Manejando el cambio en los checkboxes");
    const categoryForm = document.querySelector('#contenedorFiltro');
    const checkboxes = categoryForm.querySelectorAll('.form-check-input');

    checkboxes.forEach(checkbox => {
        checkbox.addEventListener('change', () => {
            filtrarYMostrarEventos();
        });
    });
}

// Función para filtrar y mostrar eventos en función de los checkboxes seleccionados
function filtrarYMostrarEventos() {
    console.log("Filtrando y mostrando eventos");
    const categoriasCheckeadas = obtenerCategoriasCheckeadas();
    const eventosFiltrados = eventosFuturos.filter(evento =>
        categoriasCheckeadas.includes(evento.category)
    );

    if (eventosFiltrados.length > 0) {
        mostrarUpcomingEvents({ events: eventosFiltrados }, document.getElementById("contenedorEventos"));
    } else {
        // Manejar el caso en que no hay eventos después de filtrar
        const error = document.getElementById("error");
        error.innerHTML = `<p><i><b>No se encontraron eventos para las categorías seleccionadas...</b></i></p>`;
        document.getElementById("contenedorEventos").innerHTML = ""; // Limpiar el contenido del contenedor
    }
}


// Función para obtener las categorías seleccionadas en los checkboxes
function obtenerCategoriasCheckeadas() {
    const checkboxes = document.querySelectorAll('.form-check-input:checked');
    return Array.from(checkboxes).map(checkbox => checkbox.value);
}

// Función para obtener las categorías únicas de los eventos
function obtenerCategoriasUnicas(eventos) {
    const categoriasUnicas = [];

    eventos.forEach(evento => {
        if (!categoriasUnicas.includes(evento.category)) {
            categoriasUnicas.push(evento.category);
        }
    });

    return categoriasUnicas;
}

// Función para obtener los datos de la API
async function getEventsData() {
    try {
        const respuesta = await fetch(apiURL);
        const data = await respuesta.json();
        eventosFuturos = data.events; // Actualiza la variable eventosFuturos con los datos de la API
        return data;
    } catch (error) {
        console.log(error);
    }
}

// Evento para cargar datos y configurar la página
window.addEventListener('DOMContentLoaded', async () => {
    // Obtener datos de la API
    const data = await getEventsData();

    // Filtrar eventos futuros
    mostrarUpcomingEvents(data, document.getElementById("contenedorEventos"));

    // Mostrar todos los checkboxes
    mostrarTodosLosCheckboxes(data.events);

    // Configurar el filtro de checkboxes
    manejarFiltroCheckboxes();
});


// function mostrarAllCheckbox(eventos, ubicacion) {
//     const categoriasUnicas = obtenerCategoriasUnicas(eventos);

//     let checkboxesHTML = "";

//     categoriasUnicas.forEach(categoria => {
//         checkboxesHTML += `
//             <div class="form-check">
//                 <input class="form-check-input" type="checkbox" value="${categoria}" id="${categoria}">
//                 <label class="form-check-label" for="${categoria}">
//                     ${categoria}
//                 </label>
//             </div>
//         `;
//     });

//     ubicacion.innerHTML = checkboxesHTML;
// }

// function obtenerCategoriasUnicas(eventos) {
//     const categoriasUnicas = [];

//     eventos.forEach(evento => {
//         if (!categoriasUnicas.includes(evento.category)) {
//             categoriasUnicas.push(evento.category);
//         }
//     });

//     return categoriasUnicas;
// }






//================================================================
// async function getEventsData() {
//     try {
//         const respuesta = await fetch(apiURL);
//         const data = await respuesta.json();
//         eventos = data.events;
//         mostrarUpcomingEvents(eventos, contenedorTarjetas);
//         console.log(data);
//         console.log(eventos);
//         mostrarAllCheckbox(eventos, contenedorFiltro);

//     } catch (error) {
//         console.log(error);
//     }
// }
// getEventsData();


//a diferencia de la funcion en home, en mostrarUpcomingEvents() necesito obtener y guardar en una variable la fecha actual del array (let currentDate) para poder compararla en el bucle for que recorre todos los eventos
//al inicio del bucle creamos un objeto Date a partir de la fecha del evento (objeto.date) y lo almacenamos en una variable (let eventDate)
//realizamos la comparacion de las variables guardadas (eventDate y currentDate) de esta manera nos aseguramos que solo se creen las tarjetas de aquellos eventos cuya fecha sea anterior a la fecha actual (eventDate < currentDate)

// function mostrarUpcomingEvents(arrayData, ubicacion) {
//     let tarjetas = "";
//     let error = document.getElementById("error");
//     let currentDate = new Date(data.currentDate);
//     // console.log("=========" + data.currentDate + "===========");

//     if (arrayData.length > 0) {
//         for (objeto of arrayData) {
//             let eventDate = new Date(objeto.date);
//             if (eventDate > currentDate) {
//                 // console.log(eventDate);
//                 tarjetas += createCard(objeto);
//             }
//             ubicacion.innerHTML = tarjetas;
//             error.innerHTML = "";
//         }
//     } else {
//         console.log("Error: No se encontraron resultados");
//         error.innerHTML = `<p><i><b>No se encontraron resultados...</b></i></p>`;
//     }
// }


//=========================FILTRO CHECKBOX===============================vvv

//let categoryForm = document.querySelector('#contenedorFiltro');
//let dataFiltrada = [];

//let categoriasCheckeadas; //inicializacion

//categoryForm.addEventListener('change', (e) => { //evento que "escucha" si se produjeron cambios en input
//categoriasCheckeadas = []; //asignacion de valores

//if (e.target.classList.contains('form-check-input')) { //condicion q verifica si el elemento en el q se produjo el evento (input) tiene la clase "form-check-input"

//filtrarYMostrar(data.events);
//}
//})


//====================COMBINACION DE FILTRO Y BUSCADOR ===============================

// buscador.addEventListener('input', () => {
//     filtrarYMostrar(data.events);
// })


// function filtrarYMostrar(array) {
//=========Buscador========
// let busqueda = buscador.value;
// let dataFiltrada = array.filter(evento => evento.name.toLowerCase().includes(busqueda.toLowerCase()));
// console.log(dataFiltrada.name);

//=========Filtro checkbox========
//let categoriasCheckeadas = [];

//const checkboxes = document.querySelectorAll('.form-check-input:checked'); //cada vez q un input cambia de estado a "checked" se almacena en la variable "checkboxes"
// console.log(checkboxes);

//checkboxes.forEach(checkbox => {
//if (checkbox.checked && !categoriasCheckeadas.includes(checkbox.value)) {
//categoriasCheckeadas.push(checkbox.value)
//}
// console.log(categoriasCheckeadas);
//});

//verifico que el array de categoriasCheckeadas sea superor a 0 porque esto quiere decir que existe al menos un elemento dentro.
//luego almaceno dentro de dataFiltrada cada evento que se encuentra dentro de la data.events y que haya sido checkeada (o sea marcada)
//     if (categoriasCheckeadas.length > 0) {
//         dataFiltrada = dataFiltrada.filter(evento => categoriasCheckeadas.includes(evento.category))
//     }

//     mostrarUpcomingEvents(dataFiltrada, contenedorEventos)
// }


// function mostrarAllEvents(arrayData, ubicacion) {
//     let tarjetas = "";
//     let error = document.getElementById("error");

//     if (arrayData.length > 0) {
//         for (objeto of arrayData) {
//             tarjetas += createCard(objeto);
//         }
//         ubicacion.innerHTML = tarjetas;
//         error.innerHTML = "";
//     } else {
//         console.log("Error: No se encontraron resultados");
//         error.innerHTML = `<p><i><b>No se encontraron resultados...</b></i></p>`;
//     }
// }

*************************************************
DETAILS**
**************************


// const containerCard = document.getElementById('containerCard');
// let quearySearch = location.search;
// const id = new URLSearchParams(quearySearch).get("id");
// let data = {};
// let eventito = data.events.find((evento) => evento._id == id);
// console.log(eventito);

// let concurrencia = '';
// if (eventito.estimate) {
//     concurrencia = `<p><b>Estimate: </b>${eventito.estimate}</p>`;
// } else {
//     concurrencia = `<p><b>Assistance: </b>${eventito.assistance}</p>`;
// }

// function detailCard() {
//     // console.log(objeto);
//     document.getElementById("containerCard").innerHTML =
//         `<div class="card">
//             <div class="card-img">
//                 <img src="${eventito.image}" class="card-img-top" alt="{eventito.name}">
//             </div>
//             <div class="info-details">
//                 <div class="card-body">
//                     <h2><b><i>${eventito.name}</i></b></h2>
//                     <i>
//                     <p><b>Category: </b>${eventito.category}</p>
//                     <p><b>Place: </b>${eventito.place}</p>
//                     <p><b>Capacity: </b>${eventito.capacity}</p>
//                     ${concurrencia}
//                     <p>${eventito.description}</p>
//                     </i>
//                 </div>
//                 <div class="card-footer">
//                     <p><b><i>Price: </i></b>$${eventito.price} USD</p>
//                     <p><b><i>Date: </i></b>${eventito.date}</p>
//                 </div>
//             </div>
//         </div>`
// }

// detailCard()
// console.log(detailCard);







// Parametros de busqueda

// let quearySearch = document.location.search;

// const id = new URLSearchParams(quearySearch).get("id");

// let eventito = data.events.find((evento) => evento._id === id);

// let assistanceEstimate = ""

// // Conicional para inyectar asistence y estimate segun eventos pasados o futuros

// if (eventito.assistance) {
//     assistanceEstimate = `<p class="card-text">Assistance: ${eventito.assistance}</p>`;
// } else {
//     assistanceEstimate = `<p class="card-text">Estimate: ${eventito.estimate}</p>`
// }

// // Función para crear cards detalles dinamicamente

// function cardDetail() {
//     document.getElementById("detailCards").innerHTML = `<div class="container">
//     <div class="row d-flex align-items-center">
//         <div class="col-md-6">
//         <div class="card mb-4">
//             <img src="${eventito.image}" alt="${eventito.name}" class="card-img-top">
//             <div class="card-body">
//             <h4 class="card-title">${eventito.name}</h4>
//             <p class="card-text">${eventito.description}</p>
//             </div>
//         </div>
//         </div>
//         <div class="col-md-6">
//         <div class="card mb-4">
//             <div class="card-body">
//             <p class="card-text">Category: ${eventito.category}</p>
//             <p class="card-text">Place: ${eventito.place}</p>
//             <p class="card-text">Max capacity: ${eventito.capacity}</p>
//             ${assistanceEstimate}
//             <p class="card-text">Price: $${eventito.price}</p>
//             </div>
//         </div>
//         </div>
//     </div>
// </div>`;
// }

// cardDetail();
